{"version":3,"file":"game.js","sourceRoot":"","sources":["../../../sources/client/screens/game.ts"],"names":[],"mappings":"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","sourcesContent":["import { PlayerState, Color } from '../../common/messages'\n\n/**\n * Состояние игрока в текущий ход\n */\nconst playerState: PlayerState = {\n\tfrom: {\n\t\trow: 0,\n\t\tcol: 0\n\t},\n\tto: {\n\t\trow: 0,\n\t\tcol: 0\n\t},\n\tcolor: 'r',\n\tmoved: false,\n\tsum: 0,\n\tdices: []\n}\n\n/**\n * Заголовок экрана\n */\nconst title = document.querySelector( 'main.game>h2' ) as HTMLHeadingElement;\n\n/**\n * Игральные кости\n */\nconst dicesContainer = document.querySelector('div.dices') as HTMLElement;\n\n/**\n * Игровое поле\n */\nconst field = document.querySelector('div.field') as HTMLElement;\n\n\n/**\n * Обработчик хода игрока\n */\ntype TurnHandler = ( move: PlayerState ) => void;\n\n/**\n * Обработчик хода игрока\n */\nlet turnHandler: TurnHandler;\n\n/**\n * Заполнение поля свободными клетками\n */\nfillField();\n\n\n/**\n * Событие для кубиков\n * @param event\n */\nfunction onDices( event: Event ): void\n{\n\tevent.preventDefault();\n\tplayerState.dices = roll();\n}\n\nfunction clearDiceEvent(): void\n{\n\tdicesContainer.removeEventListener('click', onDices);\n}\n\n/**\n * Генерация массива чисел кубиков\n */\nfunction roll(): Array<number>\n{\n\tlet dices: Array<number> = [randNumber(), randNumber()];\n\tdicesContainer.textContent = `${dices[0]} ${dices[1]}`;\n\tclearDiceEvent();\n\treturn dices;\n}\n\n/**\n * Генерация рандомного числа\n */\nfunction randNumber(): number\n{\n\tlet rand: number = 1 + Math.random() * 6;\n\treturn Math.floor(rand);\n}\n\n/**\n * Функция, навешивающая обработчик события на кубики\n */\nfunction diceEvent(): void\n{\n\tdicesContainer.addEventListener('click', onDices);\n}\n\nfunction defaultDices(): void\n{\n\tplayerState.dices = [];\n\tdicesContainer.textContent = 'ROLL';\n}\n\n/**\n * Функция, навешивающая обработчик события на клетки\n */\nfunction cellsEvents(): void\n{\n\tfor(let i = 0; i < 30; i++){\n\t\tfor(let j = 0; j < 30; j++){\n\t\t\tdocument.getElementsByClassName(`r${i}c${j}`)[0].addEventListener('click', onCell);\n\t\t}\n\t}\n}\n\nfunction clearCellsEvents(): void\n{\n\tfor(let i = 0; i < 30; i++){\n\t\tfor(let j = 0; j < 30; j++){\n\t\t\tdocument.getElementsByClassName(`r${i}c${j}`)[0].removeEventListener('click', onCell);\n\t\t}\n\t}\n}\n\n/**\n * Событие на клетке\n * @param event\n */\nfunction onCell( event: Event ): void\n{\n\tevent.preventDefault();\n\tif(playerState.dices.length === 0) return;\n\tconst cell = event.target as HTMLElement;\n\tconst cellColorClass = cell.classList[2] as string;\n\tconst cellCoordinates = cell.classList[1] as string;\n\tconst cellRow = Number(cellCoordinates.match(/\\d+/g)![0]) as number;\n\tconst cellCol = Number(cellCoordinates.match(/\\d+/g)![1]) as number;\n\tif(cell.classList.contains('number')) return;\n\tif(cellColorClass === 'blue__cell' || cellColorClass === 'red__cell')\n\t\t\treturn;\n\t/**\n\t * Первое нажатие игрока на свободную клетку\n\t */\n\tif(!playerState.moved && (cellColorClass === 'default__cell' || cellColorClass === 'free__cell')){\n\t\tplayerState.from.row = cellRow;\n\t\tplayerState.from.col = cellCol;\n\t\tplayerState.moved = true;\n\t\tconsole.log('from moved', playerState.moved);\n\t\tconsole.log('from', playerState.from, playerState.to);\n\t\treturn;\n\t}\n\t/**\n\t * Когда игрок нажимает второй раз на свободную клетку\n\t * (ставит блок)\n\t */\n\tif(cellColorClass === 'default__cell' || cellColorClass === 'free__cell' && playerState.moved){\n\t\tplayerState.to.row = cellRow;\n\t\tplayerState.to.col = cellCol;\n\t\tplayerState.moved = false;\n\t\tconsole.log('to moved', playerState.moved);\n\t\tconsole.log('to', playerState.from, playerState.to);\n\t\tturnHandler && turnHandler( playerState );\n\t}\n}\n\n/**\n * Отображение клетки в соответствии с массивом клеток на сервере\n * @param row\n * @param col\n * @param type\n */\nfunction renderCell( row: number, col: number, type: string )\n{\n\tconsole.log(type);\n\tconst cell = document.getElementsByClassName(`r${row}c${col}`)[0] as HTMLElement;\n\tcell.classList.remove(cell.classList[2]);\n\tcell.classList.add(`${type}`);\n}\n\n/**\n * Перерисовка поля (после хода)\n * @param field\n */\nfunction renderField( field: Array<Array<string>> ): void\n{\n\tfor(let i = 0; i < 30; i++){\n\t\tfor(let j = 0; j < 30; j++){\n\t\t\tif(field[i][j] !== 'default__cell')\n\t\t\t\trenderCell(i, j, field[i][j]);\n\t\t}\n\t}\n}\n\n/**\n * Заполнение поля (первоначальное)\n */\nfunction fillField(): void\n{\n\tlet elem: HTMLElement;\n\tfor(let i = 0; i < 31; i++){\n\t\telem = document.createElement('div');\n\t\telem.className = 'number';\n\t\tif(i < 30)\n\t\t\telem.textContent = `${i + 1}`;\n\t\tfield.appendChild(elem);\n\t}\n\tfor(let i = 0; i < 30; i++){\n\t\tfor(let j = 0; j < 31; j++){\n\t\t\tif(j === 30){\n\t\t\t\telem = document.createElement('div');\n\t\t\t\telem.className = 'number';\n\t\t\t\telem.textContent = `${i + 1}`;\n\t\t\t\tfield.appendChild(elem);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\telem = document.createElement('div');\n\t\t\telem.className = `cell r${i}c${j} default__cell`;\n\t\t\tfield.appendChild(elem);\n\t\t}\n\t}\n}\n\n/**\n * Обновляет экран игры\n * \n * @param myTurn Ход текущего игрока?\n * @param field Игровое поле\n * @param color Цвет клетки\n */\nfunction update( myTurn: boolean, field: Array<Array<string>>, color: Color ): void\n{\n\trenderField(field);\n\tplayerState.color = color;\n\tif ( myTurn )\n\t{\n\t\ttitle.textContent = 'Ваш ход';\n\t\tdicesContainer.hidden = false;\n\t\tdefaultDices();\n\t\tdiceEvent();\n\t\tcellsEvents();\n\t\treturn;\n\t}\n\ttitle.textContent = 'Ход противника';\n\tdicesContainer.hidden = true;\n\tclearCellsEvents();\n}\n\n/**\n * Устанавливает обработчик хода игрока\n * \n * @param handler Обработчик хода игрока\n */\nfunction setTurnHandler( handler: TurnHandler ): void\n{\n\tturnHandler = handler;\n}\n\nexport {\n\tupdate,\n\tsetTurnHandler,\n};\n"]}