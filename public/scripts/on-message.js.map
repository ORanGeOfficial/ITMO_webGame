{"version":3,"file":"on-message.js","sourceRoot":"","sources":["../../sources/client/on-message.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,YAAY,EAAE,OAAO,EAAE,cAAc,EAAE,MAAM,WAAW,CAAC;AAiB7E,SAAS,SAAS,CAAE,WAAwB,EAAE,IAAa;IAE1D,cAAc,CAAE,WAAW,CAAE,CAAC;IAE9B,MAAM,OAAO,GAAG,SAAS,CAAE,IAAI,CAAE,CAAC;IAElC,cAAc,CAAE,WAAW,EAAE,OAAO,CAAE,CAAC;AACxC,CAAC;AAOD,SAAS,SAAS,CAAE,IAAa;IAEhC,IAAK,OAAO,IAAI,KAAK,QAAQ,EAC7B;QACC,OAAO;YACN,IAAI,EAAE,mBAAmB;YACzB,OAAO,EAAE,iBAAiB;SAC1B,CAAC;KACF;IAED,IACA;QACC,OAAO,IAAI,CAAC,KAAK,CAAE,IAAI,CAAE,CAAC;KAC1B;IACD,OAAQ,KAAK,EACb;QACC,OAAO;YACN,IAAI,EAAE,mBAAmB;YACzB,OAAO,EAAE,0BAA0B,GAAG,KAAK;SAC3C,CAAC;KACF;AACF,CAAC;AAQD,SAAS,cAAc,CAAE,WAAwB,EAAE,OAAyB;IAE3E,QAAS,OAAO,CAAC,IAAI,EACrB;QACC,KAAK,aAAa;YACjB,SAAS,EAAE,CAAC;YACZ,YAAY,CAAE,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,CAAE,CAAC;YAC7D,MAAM;QAEP,KAAK,cAAc;YAClB,YAAY,CAAE,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,CAAE,CAAC;YAC7D,MAAM;QAEP,KAAK,YAAY;YAChB,OAAO,CAAE,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAE,CAAC;YACzC,MAAM;QAEP,KAAK,aAAa;YACjB,OAAO,CAAE,OAAO,CAAE,CAAC;YACnB,MAAM;QAEP,KAAK,kBAAkB;YACtB,OAAO,CAAC,KAAK,CAAE,qBAAqB,EAAE,OAAO,CAAC,OAAO,CAAE,CAAC;YACxD,MAAM;QAEP,KAAK,mBAAmB;YACvB,WAAW,CAAE,OAAO,CAAE,CAAC;YACvB,MAAM;QAEP;YACC,WAAW,CAAE;gBACZ,IAAI,EAAE,mBAAmB;gBACzB,OAAO,EAAE,0BAA2B,OAA4B,CAAC,IAAI,GAAG;aACxE,CAAE,CAAC;YACJ,MAAM;KACP;AACF,CAAC;AAED,OAAO,EACN,SAAS,GACT,CAAC","sourcesContent":["import { startGame, changePlayer, endGame, setSendMessage } from './game.js';\n\nimport type {\n\tAnyServerMessage,\n} from '../common/messages.js';\n\n/**\n * Функция отправки сообщений на сервер\n */\ntype SendMessage = typeof import( './connection.js' ).sendMessage;\n\n/**\n * Обрабатывает сообщения от сервера\n * \n * @param sendMessage Функция отправки сообщений\n * @param data Пришедшие данные\n */\nfunction onMessage( sendMessage: SendMessage, data: unknown ): void\n{\n\tsetSendMessage( sendMessage );\n\t\n\tconst message = parseData( data );\n\t\n\tprocessMessage( sendMessage, message );\n}\n\n/**\n * Выполняет разбор пришедших с сервера данных\n * \n * @param data Пришедшие данные\n */\nfunction parseData( data: unknown ): AnyServerMessage\n{\n\tif ( typeof data !== 'string' )\n\t{\n\t\treturn {\n\t\t\ttype: 'incorrectResponse',\n\t\t\tmessage: 'Wrong data type',\n\t\t};\n\t}\n\t\n\ttry\n\t{\n\t\treturn JSON.parse( data );\n\t}\n\tcatch ( error )\n\t{\n\t\treturn {\n\t\t\ttype: 'incorrectResponse',\n\t\t\tmessage: 'Can\\'t parse JSON data: ' + error,\n\t\t};\n\t}\n}\n\n/**\n * Выполняет действие, соответствующее полученному сообщению\n * \n * @param sendMessage Функция отправки сообщений\n * @param message Пришедшее сообщение\n */\nfunction processMessage( sendMessage: SendMessage, message: AnyServerMessage ): void\n{\n\tswitch ( message.type )\n\t{\n\t\tcase 'gameStarted':\n\t\t\tstartGame();\n\t\t\tchangePlayer( message.myTurn, message.field, message.color );\n\t\t\tbreak;\n\t\t\n\t\tcase 'changePlayer':\n\t\t\tchangePlayer( message.myTurn, message.field, message.color );\n\t\t\tbreak;\n\t\t\n\t\tcase 'gameResult':\n\t\t\tendGame( message.win ? 'win' : 'loose' );\n\t\t\tbreak;\n\t\t\n\t\tcase 'gameAborted':\n\t\t\tendGame( 'abort' );\n\t\t\tbreak;\n\t\t\n\t\tcase 'incorrectRequest':\n\t\t\tconsole.error( 'Incorrect request: ', message.message );\n\t\t\tbreak;\n\t\t\n\t\tcase 'incorrectResponse':\n\t\t\tsendMessage( message );\n\t\t\tbreak;\n\t\t\n\t\tdefault:\n\t\t\tsendMessage( {\n\t\t\t\ttype: 'incorrectResponse',\n\t\t\t\tmessage: `Unknown message type: \"${(message as AnyServerMessage).type}\"`,\n\t\t\t} );\n\t\t\tbreak;\n\t}\n}\n\nexport {\n\tonMessage,\n};\n"]}